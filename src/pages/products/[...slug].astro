---
import ProductSlideShow from "@/components/products/ProductSlideShow.astro";
import Layout from "@/layouts/Layout.astro";
import { actions } from "astro:actions";

const { slug } = Astro.params;

const { data, error } = await Astro.callAction(
  actions.getProductBySlug,
  slug ?? "",
);
if (error) {
  return Astro.redirect("/404");
}

const { product, images } = data;

export const prerender = false;
---

<Layout>
  <div class="grid grid-cols-1 md:grid-cols-3 w-full">
    <ProductSlideShow images={images} />

    <section class="pl-5 md:pl-0">
      <h1 class="text-3xl font-bold">{product.title}</h1>
      <h2 class="text-2xl font-bold">${product.price}</h2>

      <h3 class="text-2xl font-bold mt-10">Sizes</h3>
      <ul class="flex gap-3">
        {
          product.sizes.split(",").map((size) => (
            <li class="cursor-pointer" data-size={size}>
              {size}
            </li>
          ))
        }
      </ul>

      <h3 class="text-3xl font-semibold mt-5">Quantity</h3>
      <div class="mt-2">
        <button
          id="decrement-button"
          class="p-1 text-center items-center text-3xl hover:font-bold"
          >-</button
        >
        <input
          type="number"
          min="1"
          value="1"
          class="w-14 text-center p-2 border rounded-lg"
        />
        <button
          id="increment-button"
          class="p-1 text-center items-center text-2xl hover:font-bold"
          >+</button
        >

        <button
          id="addCart-button"
          class="bg-slate-800 p-2 text-center rounded-md border hover:border hover:border-sky-400 hover:shadow-lg disabled:bg-gray-400"
          ><span class="mx-4 text-slate-100">Add to Cart</span></button
        >

        <h3 class="mt-7 font-semibold">Description</h3>
        <p class="prose md:prose-md mt-2 mb-10">{product.description}</p>
      </div>

      <input type="hidden" id="product-id" value={product.id} />
    </section>
  </div>
</Layout>

<style>
  input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  .selected-size {
    @apply text-sky-700 rounded-full border border-sky-700 p-1 transition-all;
  }
</style>

<script>
  import { CartCookiesClient } from "@/utils";
  import Swal from "sweetalert2";

  // To select the size and change the color of the selected size
  const sizeElements = document.querySelectorAll("li");

  sizeElements.forEach((liElement) => {
    liElement.addEventListener("click", () => {
      sizeElements.forEach((s) => {
        s.classList.remove("selected-size");
        liElement.classList.add("selected-size");
      });
    });
  });

  // To manage the quantity of the product selected

  const quantityInput = document.querySelector("input") as HTMLInputElement;
  const decrementButton = document.querySelector(
    "#decrement-button",
  ) as HTMLButtonElement;
  const incrementButton = document.querySelector(
    "#increment-button",
  ) as HTMLButtonElement;
  const addToCartButton = document.querySelector(
    "#addCart-button",
  ) as HTMLButtonElement;
  const productIdInput = document.querySelector(
    "#product-id",
  ) as HTMLInputElement;

  let quantity = 1;

  incrementButton.addEventListener("click", () => {
    quantity = Math.min(quantity + 1, 5);
    quantityInput.value = quantity.toString();
  });
  decrementButton.addEventListener("click", () => {
    quantity = Math.max(quantity - 1, 1);
    quantityInput.value = quantity.toString();
  });

  addToCartButton.addEventListener("click", () => {
    const size = document.querySelector(".selected-size")?.textContent;

    if (!size) {
      return Swal.fire({
        toast: true,
        position: "center",
        icon: "error",
        title: "Please select a size!!",
        showConfirmButton: false,
        timer: 2500,
      });
    }

    addToCartButton.disabled = true;

    CartCookiesClient.addItem({
      productId: productIdInput.value,
      size: size,
      quantity: quantity,
    });

    //TODO: change before when we get the view transitions
    window.location.href = "/cart";
  });
</script>
